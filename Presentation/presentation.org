#+OPTIONS: H:3 toc:nil num:t
#+LANGUAGE: fr
#+BEAMER_COLOR_THEME:
#+BEAMER_FONT_THEME:
#+BEAMER_HEADER: \usepackage[frenchb]{babel}
#+BEAMER_HEADER: \setbeamertemplate{footline}{\leavevmode\hbox{\begin{beamercolorbox}[wd=.25\paperwidth,ht=2.25ex,dp=1ex,center]   {author in head/foot}\usebeamerfont{author in head/foot}\insertshortauthor\end{beamercolorbox}\begin{beamercolorbox}[wd=.50\paperwidth,ht=2.25ex,dp=1ex,center]{title in head/foot}\usebeamerfont{title in head/foot}\insertshorttitle\end{beamercolorbox}\begin{beamercolorbox}[wd=.25\paperwidth,ht=2.25ex,dp=1ex,right]{date in head/foot}\insertframenumber{} / \inserttotalframenumber\hspace*{2ex}\end{beamercolorbox}}\vskip0pt}
#+BEAMER_HEADER: \AtBeginSection[]{\begin{frame}\vfill\centering\begin{beamercolorbox}[sep=8pt,center,shadow=true,rounded=true]{title}\usebeamerfont{title}\insertsectionhead\par\end{beamercolorbox}\vfill\end{frame}}
#+BEAMER_INNER_THEME: 
#+BEAMER_OUTER_THEME:
#+BEAMER_THEME: Singapore
#+LATEX_CLASS: beamer

#+TITLE: TAL: Behaviour trees
#+AUTHOR: Valentin Lebouvier


* Introduction
*** Sujet
*Projet IA en Python (part1): Behaviour tree et mission planning*

*** Objectifs
- Sujet 1 : Behaviour trees
- Sujet 2 : Préparation TPs
- Sujet 3 (optionnel): Mise en oeuvre sur du mission planning
  
*** Plan
#+LATEX: \tableofcontents


* Behaviour Trees
*** Behaviour Trees

****                                                                  :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.5
:END:

- Outil de représentation de comportements permettant une modélisation et une implémentation simple ce ces comportements
- Utilisé dans les domaines des jeux vidéos et de la robotique pour controller les comportements d'agents autonomes

****                                                                  :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.5
:END:
#+LATEX_ATTR: :caption \caption{By Aliekor at English Wikipedia, CC BY-SA 3.0, https://commons.wikimedia.org/w/index.php?curid=39804218}
[[./img/BT_search_and_grasp.png]]





*** Définition
Un *behaviour tree* (BT) est un graphe orienté acyclique dont chaque noeud retourne Succès (S), Échec (E) ou En Cours (R) selon les règles qui leurs sont associées.

L'évaluation d'un BT se fait par l'action d'un /tick/ sur son noeud racine, celui-ci évalue alors ses enfants de gauche a droite selon les règles qui sont associées a son type.

Les noeuds peuvent se trouver sous trois formes, les Composites, les Décorateurs et les noeuds d'Éxécution.



** Décorateurs
*** Décorateurs

** Noeuds d'éxécution
*** *Action* 

Représentation :

Retourne Succès si:
L'action s'est terminée correctement

Retourne Échec si:
L'action s'est mal terminée

Retourne En Cours si:
L'action est en cours


*** *Condition*  

Représentation :

Retourne Succès si:
La condition est vraie

Retourne Échec si:
La condition est fausse

Retourne En Cours si:
Jamais

** Composites

*** *Séquence* 

Représentation :

Retourne Succès si:
Tout les enfants ont réussis

Retourne Échec si:
Un enfant a échoué

Retourne En Cours si:
Un enfant est en cours

*** *Sélecteur*  

Représentation :

Retourne Succès si:
Un enfant a réussi

Retourne Échec si:
Tout les enfants ont échoués

Retourne En Cours si:
Un enfant est en cours

*** *Parallèle*  

Représentation :

Retourne Succès si:
M enfants ont réussis

Retourne Échec si:
F enfants ont échoués

Retourne En Cours si:
Aucun des précédents

*** Composites avec mémoires


* PacMan
*** Frame 1


* TPs
*** Frame 1

